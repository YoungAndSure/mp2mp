syntax="proto2";
package qqnews;

message UserProfile
{
    optional bool       has_static_channel_model    = 1 [default = false];
    optional bool       has_static_topic_model      = 2 [default = false];
    optional bool       has_static_tag_model        = 3 [default = false];
    optional bool       has_static_L2_topic_model   = 4 [default = false];  // 频道topic模型
    optional bool       has_static_L2_tag_model     = 5 [default = false];  // 频道tag模型

    optional bool       has_rt_channel_model        = 11[default = false];
    optional bool       has_rt_topic_model          = 12[default = false];
    optional bool       has_rt_tag_model            = 13[default = false];
}

message BusinessZone
{
    optional bytes busi_id          = 1;    //eg: 商圈id
    optional bytes busi_name        = 2;    //eg: 商圈名
    optional float busi_dis         = 3;    //eg: 商圈距离 精确(米)
    optional bytes busi_category    = 4;    //eg: 商圈
}

message PoiData
{
    optional bytes      name        = 1;    // eg: 希格玛大厦
    optional bytes      addr        = 2;    // eg: 北京市海淀区知春路49号
    optional bytes      catalog     = 3;    // eg: 房产小区;商务楼宇
    optional float      dist        = 4;    // eg: 4.5
    optional float      latitude    = 5;    // eg: 39.97725
    optional float      longitude   = 6;    // eg: 116.336945
    optional bytes      direction   = 7;
}

message TxLocationInfo
{
    optional uint32     level       = 1;
    optional bytes      name        = 2;
    optional bytes      address     = 3;
    optional bytes      provider    = 4;    // eg: wifi
    optional float      latitude    = 5;    // eg: 39.977211
    optional float      longitude   = 6;    // eg: 116.336936
    optional float      altitude    = 7;    // eg: 0.0
    optional float      accuracy    = 8;    // eg: 150.0 //以米为单位
    optional uint32     city_code   = 9;    // eg: 110108
    optional uint32     area_stat   = 10;   // eg: 0
    optional bytes      nation      = 11;   // eg: 中国
    optional bytes      province    = 12;   // eg: 北京市
    optional bytes      city        = 13;   // eg: 北京市
    optional bytes      district    = 14;   // eg: 海淀区
    optional bytes      street      = 15;   // eg: 知春路
    optional bytes      street_no   = 16;   // eg: 知春路53号
    optional bytes      town        = 17;   // eg: 东升乡
    optional bytes      village     = 18;   // eg: 老虎庙
    optional float      bearing     = 19;   // eg: 0.0 
    optional uint32     time        = 20;   // eg: 1457590600830
    repeated PoiData    poi_data    = 21;   // buidings
    optional bytes      business_zone     = 22;   // eg: 商圈不用了
    optional BusinessZone   busi_zone   = 23;   //eg: 商圈
}

message UserSpec
{
    required bytes      device_id   = 1;                // 设备id，android设备为imei号,作为辨识用户的唯一id
    optional uint64     uin         = 2 [default = 0];  // 用户qq号，未登录填0
    optional bytes      app_version = 3;                // 客户端版本号，格式为"操作系统版本号_平台_app版本"
    optional bytes      wxopenid    = 4;                // 用户微信登录帐号
    optional bytes      sinaopenid  = 5 [deprecated = true];              // 用户新浪登录帐号
    optional bytes      chl_from    = 6;              // 跳转来源频道, 比如从体育频道跳转到关心
    optional uint64     item_count  = 7;              // count. 每天第一次请求时 20 条.
    optional bytes      ip          = 8;              // 客户端IP地址
    optional bytes      location    = 9;                // 用户地域信息
    optional uint64     device_md5  = 10;               // device_id计算得到的MD5
    optional bytes      stock       = 11;               // 自选股
    optional bytes      luin        = 12;               // oidb用户登录态
    optional bytes      lskey       = 13;               // oidb用户登录态
    optional bool       has_user_model = 14 [default=false]; // 是否有语言模型
    optional bytes      home_town   = 15;               // 家乡
    optional bytes      imsi        = 16;               // 另一个设备号，针对root过的andriod手机
    optional bytes      udevice_id  = 17;               // unique device_id
    optional bytes      device_info = 18;               // 设备信息，网络、OS、型号、分辨率等可能的设备信息
    optional bytes      curr_loc    = 19;               // 用户当前所在城市
	optional bool		has_ckv_topic_model = 20 [default=false]; // 在ckv中是否有Topic模型
    optional UserProfile    user_profile    = 21;       // server中需要记录的用户信息,返回参数
    optional uint32     flush_num   = 22;
    optional TxLocationInfo tx_lbs_loc      = 23;       // poi定位信息
    optional bytes      omgid       = 24;               //boss生成的omgid
    optional bytes      guid        = 25;               //app生成的uid 
    optional bytes      idfv_icloud = 26;       //icloud里存储的用户用过的idfv
    optional bytes      fixed_device_id = 27;
    optional bytes      common_id = 28;
    optional bytes      idfa = 29;
    optional bytes      imei = 30;
    optional uint32     login_type = 31;
    optional uint64     login_id  = 32; 
    optional uint32     city_level  = 33;              // city_level : 1,2,3
    optional bool       use_new_index = 34 [default=false]; //use new index
    optional uint64     total_count  = 50;              // total count. item_count + Candidate
}

message ExpansionProperty
{
    required bytes key = 1;
    required bytes value = 2;
}

message ReasonInfo
{
    optional bytes trigger = 1;  //trigger  :RCM,LOC,ICF,CAT
    optional bytes policy = 2;   //具体策略
    optional bytes key_type = 3; //召回具体使用类型 tag cat cmsid等
    optional bytes key_id = 4;   //前者ID值
    optional float score = 5;
}

message DocInfo
{
    // openid+mid+index -->微信
    required bytes      openid      = 1;                // 公众号openid,微信文章
    required bytes      mid         = 2;                // 消息id
    required bytes      index       = 3;                // 索引
    required float      doc_score   = 4;                // 推荐得分
    optional bytes      reason      = 5;                // 详细推荐理由,显示分类,兴趣等信息,用于线下调试.
    // 新闻id-->所有新闻唯一，cmsid，ri
    required bytes      id          = 6;                // 新闻 cmsid
    // 需要保留, 需要讨论
    required bytes      reason_flag = 7;                // 推荐理由. 推荐理由都是3个字母:  微信热文 HOT 本地 LOC 好友 FRI 推荐 REC
    optional uint32     doc_source  = 8;                // 新闻来源: 腾讯新闻客户端、腾讯网、订阅号、公众号
    optional bool       has_pic_list= 9[default=false]; // 是否有组图

    optional int32      friend_join_cnt         = 10;   // 多少好友读过该新闻
    optional float      covisit_score           = 11;   // covisit得分
    optional float      user_model_score        = 12;   // user model得分
    optional uint32     hot                     = 13;   // 新闻热度
    optional float      tag_score               = 14;   // 新闻tag得分
    optional float      qua_score               = 15;   // 新闻qua得分 ask alvin
    optional uint32     feedback_time_score     = 16;   // 新闻相关反馈得分
    optional float      user_model_beta_score   = 17;   // 第二层topic模型得分
    optional float      tag_beta_score          = 18;   // 第二层tag模型得分
    optional float      hq_tag_score            = 19;   // 第二层高质量tag模型得分

    optional bytes      doc_extra_info          = 20;   // 新闻地域等扩展信息
    optional uint32     channel_id              = 21;   // 新闻所属频道
    optional uint32     doc_group               = 22;   // 新闻分组，同group的新闻在一个槽位展示

    repeated bytes      vid                     = 23; //video id
    repeated ExpansionProperty  property_ex     = 24; //video ext

    optional ReasonInfo details                 = 25;    //推荐详情
    optional int32      soso_index              = 26;
    optional int32      reason_int_flag         = 27;    //soso report
    optional bool       is_top_rec              = 58;    //soso rec
    optional uint32     title_id                = 61[default=0];// 主副标题 0 - 主标题； 1 - 副标题
    optional bytes      debug_info  = 100;              // 调试信息
}

message CpInfo
{
    required uint64     cpid                    = 1;   //媒体帐号ID
    required bytes      reason_flag             = 2;   //推荐理由
    required bytes      reason                  = 3;   //推荐详细理由 
    optional float      user_model_score        = 4;   //user model得分
    optional ReasonInfo details                 = 5;   //推荐详情

    optional bytes      debug_info              = 100; // 调试信息
}

message HumanRefineDoc
{
    // 新闻id-->所有新闻唯一，cmsid，ri
    required bytes          id              = 1;        // 新闻 cmsid
    optional uint32         position        = 2;
    optional bytes          type            = 3;        // 类型：hot1:热文; pic:组图视频; push:push; superstick:超级置顶
    optional bytes          article_type    = 4;        // 文章类型：直播:zhibo,逗号分割的字符串 
}

message RDMDebugInfo
{
    required bytes          key              = 1;
    optional int32          value            = 2;
}

message ReqArgs
{
    optional uint32         time_out_ms     = 1[default = 0];       // 请求超时时间，单位ms，0表示默认超时
    optional bool           is_retry_req    = 2[default = false];   // 是否是重试请求，默认不是
    repeated RDMDebugInfo   rdm_debug       = 3;                    // rdm调试选项

    optional bytes          wx_news_grp_id  = 4;                    // 微信插件,新闻groupid
    optional bytes          wx_msg_id       = 5;                    // 微信消息ID,用户读取过去的消息缓存

    optional int32          doc_level       = 10[default = 1];
    optional int32          filter_value    = 11[default = 0];
}

message ReqExt
{
    optional bytes key = 1;
    optional bytes value = 2;
}

message AdReqArgs
{

}

message NewsRcmRequest
{
    required UserSpec   user_spec   = 1;
    optional bytes      channel     = 2;
    // 算法类型 -->指定某次请求只出某种分类，现在只传0
    required bytes      alg_type    = 3;                //算法类型，0 个性化  1 只出分类  2 只出好友  3 只出本地 
    // 传空串
    optional bytes      alg_extra   = 4;                //算法附加信息，如果是算法 1 就填上分类标号，多个分类用逗号隔开. (机器人需求)

    repeated HumanRefineDoc     human_refine_docs   = 5;    // 人工干预doc
    optional uint32     alg_version = 6;                // 用于指定AB测试流量分配
    optional ReqArgs    req_arg     = 7;                // 请求参数
    optional bytes      trace_id    = 8;
    repeated ReqExt     req_ext_args = 9; //分发接入层传入参数
    repeated ReqExt     req_ext_soso = 10; //分发接入层传入soso参数
    optional AdReqArgs  ad_req_args = 11; // 广告透传参数

    optional uint64     debug_flag  = 100 [default = 0];
    optional uint32     degrade_level   = 101 [default = 0];    // 降级服务指示
}


message RspExt
{
    optional bool       is_cached_result        = 1 [default = false];
    optional bool       is_from_proxy           = 2 [default = false];  //代理层结果
    optional sint32     debug_flag              = 3 [default = 0];  //是否上报曝光
}

message NewsRcmResult
{
    required UserSpec   user_spec   = 1;
    repeated DocInfo    doc_infos   = 2;
    // 配合请求中的alg_type，
    required uint32     alg_status  = 3;                //算法状态,为1表示能够吐出相应算法的结果, 为0表示不能吐出响应算法的结果 (此时默认用个性化结果)
    // 顶上给出出多少条推荐，配合alg_type使用
    optional bytes      recomm_reason   = 4;            //此次推荐的理由,返回此次按用户兴趣匹配而推荐的文章的类型，比如：足球、养生...这样的词
    // 前台根据版本号判断，和客户端打通的
    required uint32     alg_version = 5;                //算法版本号: 1, 2, 3, 4, 5, 控制不同版本的算法, 方便做A/B Test.
    // 不用管，用来跟踪同一批次的请求
    // 当前推荐服务内部用来填写session_id(casparwang,2015-09-30)
    required bytes      seq_no      = 6;                //算法流水号, 每次请求时, 算法后台生成一个算法流水号(md5(uid + curtime)),返回给客户端.
    optional uint32     exp_ir_doc_num  = 7;    // 感兴趣文章应该展示条数
    optional uint32     rel_ir_doc_num  = 8;    // 感兴趣文章实际展示条数
    optional bytes      trace_id = 9;
    optional bytes      soso_seq_no      = 10; //soso算法流水号, 每次请求时, 算法后台生成一个算法流水号(md5(uid + curtime)),返回给客户端.
    optional uint32     policy_id = 11;
    optional bytes      ad_info = 12;
    repeated CpInfo     cpinfo = 13;

    optional bytes      debug_info      = 100;  // 调试信息
    optional int32      ret_code        = 101[default = 0]; // 返回码，标识本次响应状态，详见EnumRetCode
    optional uint32     time_cost_ms    = 102;  // 本次请求耗时，单位：毫秒
    optional bytes      diag_info       = 103;  // 推荐服务诊断信息,下划线分隔的字符串
    optional RspExt     rsp_ext         = 104;  // 扩展信息
}
